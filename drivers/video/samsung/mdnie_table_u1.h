#ifndef __MDNIE_TABLE_H__
#define __MDNIE_TABLE_H__

#include "mdnie.h"

#ifdef CONFIG_FB_S5P_MDNIE_HIJACK
// Yank555.lu : hijack profile (use natural as base)
static unsigned short tune_hijack[] = {
	0x0000, 0x0000, /*( 0, 1) BANK 0*/
	0x0008, 0x00a4, /*( 2, 3) Dither8 UC4 ABC2 CP1 | CC8 MCM4 SCR2 SCC1 | CS8 DE4 DNR2 HDR1*/
	0x0030, 0x0000, /*( 4, 5) FA cs1 de8 hdr2 fa1*/
	0x0092, 0x0020, /*( 6, 7) DE pe*/
	0x0093, 0x0020, /*( 8, 9) DE pf*/
	0x0094, 0x0020, /*(10,11) DE pb*/
	0x0095, 0x0020, /*(12,13) DE ne*/
	0x0096, 0x0020, /*(14,15) DE nf*/
	0x0097, 0x0020, /*(16,17) DE nb*/
	0x0098, 0x1000, /*(18,19) DE max ratio*/
	0x0099, 0x0100, /*(20,21) DE min ratio*/
	0x00e1, 0xf01d, /*(22,23) SCR RrCr*/
	0x00e2, 0x13f1, /*(24,25) SCR RgCg*/
	0x00e3, 0x0fde, /*(26,27) SCR RbCb*/
	0x00e4, 0x14fb, /*(28,29) SCR GrMr*/
	0x00e5, 0xe717, /*(30,31) SCR GgMg*/
	0x00e6, 0x00e7, /*(32,33) SCR GbMb*/
	0x00e7, 0x1cf0, /*(34,35) SCR BrYr*/
	0x00e8, 0x0cf2, /*(36,37) SCR BgYg*/
	0x00e9, 0xe827, /*(38,39) SCR BbYb*/
	0x00ea, 0x00ff, /*(40,41) SCR KrWr*/
	0x00eb, 0x00f8, /*(42,43) SCR KgWg*/
	0x00ec, 0x00f1, /*(44,45) SCR KbWb*/
	0x0000, 0x0001, /*(46,47) BANK 1*/
	0x001f, 0x0080, /*(48,49) CC chsel strength*/
	0x0020, 0x0000, /*(50,51) CC lut r	 0*/
	0x0021, 0x0290, /*(52,53) CC lut r	16 144*/
	0x0022, 0x20a0, /*(54,55) CC lut r	32 160*/
	0x0023, 0x30b0, /*(56,57) CC lut r	48 176*/
	0x0024, 0x40c0, /*(58,59) CC lut r	64 192*/
	0x0025, 0x50d0, /*(60,61) CC lut r	80 208*/
	0x0026, 0x60e0, /*(62,63) CC lut r	96 224*/
	0x0027, 0x70f0, /*(64,65) CC lut r 112 240*/
	0x0028, 0x80ff, /*(66,67) CC lut r 128 255*/
	0x00ff, 0x0000, /*(68,69) Mask Release*/
	END_SEQ, 0x0000 /*(70,71)*/
};
#endif

static const unsigned short tune_cyanogenmod[] = {
	/*start */
	0x0001, 0x0000, /* */
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000, /*DNR bypass 0x1010 */
	0x002f, 0x0fff, /*DNR bypass 0x0400 */
	0x003A, 0x0009, /*HDTR (DE off)(CS only 9) */
	0x003B, 0x0000, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0000, /*CS GAIN */
	0x0042, 0x003f, /*DE TH (MAX DIFF) */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};


static const unsigned short tune_dynamic_gallery[] = {
	/*start U1 dynamic gallery */
	0x0001, 0x0041, /*SCR + PCC */
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000, /*DNR bypass 0x1010 */
	0x002f, 0x0fff, /*DNR bypass 0x0400 */
	0x003A, 0x000D, /*HDTR DE CS */
	0x003B, 0x03ff, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x012c, /*CS GAIN  */
	0x0042, 0x0020, /*DE TH (MAX DIFF) */
	0x0049, 0x0400, /*pcc skin */
	0x004a, 0x7a00,
	0x004b, 0x008f,
	0x004d, 0x0100, /*pcc strength */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0x0000, /*gc R */
	0x00ca, 0xffff,	/*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x0000, /*rm G */
	0x00cf, 0xffff, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x00ff, /*gc B */
	0x00d2, 0x00ff, /*rm B */
	0x00d3, 0x00ff, /*yw B */
	0x00D6, 0x1d00, /*GAMMA start C210 */
	0x00D7, 0x1d00,
	0x00D8, 0x1d00,
	0x00D9, 0x1d00,
	0x00DA, 0x1d00,
	0x00DB, 0x1d00,
	0x00DC, 0x1d00,
	0x00DD, 0x1d00,
	0x00DE, 0x1d00,
	0x00DF, 0x1d00,
	0x00E0, 0x1d00,
	0x00E1, 0x1d00,
	0x00E2, 0x1d00,
	0x00E3, 0x1d00,
	0x00E4, 0x1d00,
	0x00E5, 0xa40e,
	0x00E6, 0xa40e,
	0x00E7, 0xa40e,
	0x00E8, 0xa819,
	0x00E9, 0xa40a,
	0x00EA, 0x2200,
	0x00EB, 0x1c25,
	0x00EC, 0x1842,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_dynamic_ui[] = {
	/*start U1 dynamic ui */
	0x0001, 0x0000,
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000, /*DNR bypass 0x1010 */
	0x002f, 0x0fff, /*DNR bypass 0x0400 */
	0x003A, 0x000d, /*HDTR DE_off CS : de on = d ,  de off = 9 */
	0x003B, 0x0001, /*DE SHARPNESS(0~1023)  off */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x012c, /*CS GAIN 300 */
	0x003B, 0x0001, /*DE SHARPNESS(0~1023)  off */
	0x0042, 0x0030, /*DE TH (MAX DIFF) */
	0x004d, 0x0100, /*pcc strength */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0x0000, /*gc R */
	0x00ca, 0xffff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x0000, /*rm G */
	0x00cf, 0xffff, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x00ff, /*gc B */
	0x00d2, 0x00ff, /*rm B */
	0x00d3, 0x00ff, /*yw B */
	0x00D6, 0x1d00, /*GAMMA start */
	0x00D7, 0x1d00,
	0x00D8, 0x1d00,
	0x00D9, 0x1d00,
	0x00DA, 0x1d00,
	0x00DB, 0x1d00,
	0x00DC, 0x1d00,
	0x00DD, 0x1d00,
	0x00DE, 0x1d00,
	0x00DF, 0x1d00,
	0x00E0, 0x1d00,
	0x00E1, 0x1d00,
	0x00E2, 0x1d00,
	0x00E3, 0x1d00,
	0x00E4, 0x1d00,
	0x00E5, 0xa40e,
	0x00E6, 0xa40e,
	0x00E7, 0xa40e,
	0x00E8, 0xa819,
	0x00E9, 0xa40a,
	0x00EA, 0x2200,
	0x00EB, 0x1c25,
	0x00EC, 0x1842,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_dynamic_video[] = {
	/*start U1 dynamic video */
	0x0001, 0x0041, /*PCC 40 */
	0x002c, 0x003C, /*DNR bypass 0x003C */
	0x002d, 0x1908, /*DNR bypass 0x0a08 */
	0x002e, 0x1005, /*DNR bypass 0x1010 */
	0x002f, 0x0400, /*DNR bypass 0x0400 */
	0x003A, 0x000D, /*HDTR DE CS  de on = d ,  de off = 9 */
	0x003B, 0x03ff, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x012c, /*CS GAIN  */
	0x0042, 0x0020, /*DE TH (MAX DIFF) */
	0x0049, 0x0400, /*pcc skin */
	0x004a, 0x7a00, /*7300 */
	0x004b, 0x008F, /*008f */
	0x004d, 0x0100, /*pcc strength */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0x0000, /*gc R */
	0x00ca, 0xffff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x0000, /*rm G */
	0x00cf, 0xffff, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x00ff, /*gc B */
	0x00d2, 0x00ff, /*rm B */
	0x00d3, 0x00ff, /*yw B */
	0x00D6, 0x1d00, /*GAMMA start C210 */
	0x00D7, 0x1d00,
	0x00D8, 0x1d00,
	0x00D9, 0x1d00,
	0x00DA, 0x1d00,
	0x00DB, 0x1d00,
	0x00DC, 0x1d00,
	0x00DD, 0x1d00,
	0x00DE, 0x1d00,
	0x00DF, 0x1d00,
	0x00E0, 0x1d00,
	0x00E1, 0x1d00,
	0x00E2, 0x1d00,
	0x00E3, 0x1d00,
	0x00E4, 0x1d00,
	0x00E5, 0xa40e,
	0x00E6, 0xa40e,
	0x00E7, 0xa40e,
	0x00E8, 0xa819,
	0x00E9, 0xa40a,
	0x00EA, 0x2200,
	0x00EB, 0x1c25,
	0x00EC, 0x1842,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000,	/*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_dynamic_vt[] = {
	/*start U1 dynamic vt */
	0x0001, 0x0040, /*SCR HDTR */
	0x002c, 0x0fff, /*DNR dirTh */
	0x002d, 0x19ff, /*DNR dirnumTh decon7Th */
	0x002e, 0xff16, /*DNR decon5Th maskTh */
	0x002f, 0x0000, /*DNR blTh */
	0x003a, 0x000d, /*HDTR DE CS */
	0x003b, 0x03ff, /*DE SHARPNESS */
	0x003c, 0x0000, /*NOISE LEVEL */
	0x003f, 0x0100, /*CS GAIN */
	0x0042, 0x0000, /*DE TH (MAX DIFF) */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0x0000, /*gc R */
	0x00ca, 0xffff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x0000, /*rm G */
	0x00cf, 0xffff, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x00ff, /*gc B */
	0x00d2, 0x00ff, /*rm B */
	0x00d3, 0x00ff, /*yw B */
	0x00D6, 0x1d00, /*GAMMA start C210 */
	0x00D7, 0x1d00,
	0x00D8, 0x1d00,
	0x00D9, 0x1d00,
	0x00DA, 0x1d00,
	0x00DB, 0x1d00,
	0x00DC, 0x1d00,
	0x00DD, 0x1d00,
	0x00DE, 0x1d00,
	0x00DF, 0x1d00,
	0x00E0, 0x1d00,
	0x00E1, 0x1d00,
	0x00E2, 0x1d00,
	0x00E3, 0x1d00,
	0x00E4, 0x1d00,
	0x00E5, 0xa40e,
	0x00E6, 0xa40e,
	0x00E7, 0xa40e,
	0x00E8, 0xa819,
	0x00E9, 0xa40a,
	0x00EA, 0x2200,
	0x00EB, 0x1c25,
	0x00EC, 0x1842,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_movie_gallery[] = {
	/*start U1 movie gallery */
	0x0001, 0x0041, /*SCR + PCC */
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000, /*DNR bypass 0x1010 */
	0x002f, 0x0fff, /*DNR bypass 0x0400 */
	0x003A, 0x000D, /*HDTR DE CS */
	0x003B, 0x0001, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0032, /*CS GAIN 300 */
	0x0042, 0x003f, /*DE TH (MAX DIFF) */
	0x0049, 0x0400, /*pcc skin */
	0x004a, 0x7a00,
	0x004b, 0x008f,
	0x004d, 0x0000, /*pcc strength */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0xb6bc, /*gc R */
	0x00ca, 0xd4ff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x2148, /*rm G */
	0x00cf, 0xe8f1, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x53ee, /*gc B */
	0x00d2, 0x28f6, /*rm B */
	0x00d3, 0x56e7, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_movie_ui[] = {
	/*start U1 movie ui */
	0x0001, 0x0040, /*scr */
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000, /*DNR bypass 0x1010 */
	0x002f, 0x0fff, /*DNR bypass 0x0400 */
	0x003A, 0x000d, /*HDTR DE_off CS : de on = d ,  de off = 9 */
	0x003B, 0x0001, /*DE SHARPNESS(0~1023)  off */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0032, /*CS GAIN 50 */
	0x0042, 0x0030, /*DE TH (MAX DIFF) */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0xb6bc, /*gc R */
	0x00ca, 0xd4ff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x2148, /*rm G */
	0x00cf, 0xe8f1, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x53ee, /*gc B */
	0x00d2, 0x28f6, /*rm B */
	0x00d3, 0x56e7, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_movie_video[] = {
	/*start U1 movie video */
	0x0001, 0x0041, /*PCC 40 */
	0x002c, 0x003C, /*DNR bypass 0x003C */
	0x002d, 0x1908, /*DNR bypass 0x0a08 */
	0x002e, 0x1005, /*DNR bypass 0x1010 */
	0x002f, 0x0400, /*DNR bypass 0x0400 */
	0x003A, 0x000D, /*HDTR DE CS  de on = d ,  de off = 9 */
	0x003B, 0x0001, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0032, /*CS GAIN 300 */
	0x0042, 0x003f, /*DE TH (MAX DIFF) */
	0x0049, 0x0400, /*pcc skin */
	0x004a, 0x7a00, /*7300 */
	0x004b, 0x008F, /*008f */
	0x004d, 0x0000, /*pcc strength */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0xb6bc, /*gc R */
	0x00ca, 0xd4ff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x2148, /*rm G */
	0x00cf, 0xe8f1, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x53ee, /*gc B */
	0x00d2, 0x28f6, /*rm B */
	0x00d3, 0x56e7, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_movie_vt[] = {
	/*start U1 movie vt */
	0x0001, 0x0040, /*SCR HDTR */
	0x002c, 0x0fff, /*DNR dirTh */
	0x002d, 0x19ff, /*DNR dirnumTh decon7Th */
	0x002e, 0xff16, /*DNR decon5Th maskTh */
	0x002f, 0x0000, /*DNR blTh */
	0x003a, 0x000d, /*HDTR DE CS */
	0x003b, 0x0000, /*DE SHARPNESS */
	0x003c, 0x0000, /*NOISE LEVEL */
	0x003f, 0x0030, /*CS GAIN */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0xb6bc, /*gc R */
	0x00ca, 0xd4ff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x2148, /*rm G */
	0x00cf, 0xe8f1, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x53ee, /*gc B */
	0x00d2, 0x28f6, /*rm B */
	0x00d3, 0x56e7, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};


static const unsigned short tune_standard_gallery[] = {
	/*start U1 standard gallery */
	0x0001, 0x0041, /*SCR + PCC */
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000, /*DNR bypass 0x1010 */
	0x002f, 0x0fff, /*DNR bypass 0x0400 */
	0x003A, 0x000D, /*HDTR DE CS */
	0x003B, 0x03ff, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0032, /*CS GAIN  */
	0x0042, 0x0020, /*DE TH (MAX DIFF) */
	0x0049, 0x0400, /*pcc skin */
	0x004a, 0x7a00,
	0x004b, 0x008f,
	0x004d, 0x0100, /*pcc strength */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0x0000, /*gc R */
	0x00ca, 0xffff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x0000, /*rm G */
	0x00cf, 0xffff, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x00ff, /*gc B */
	0x00d2, 0x00ff, /*rm B */
	0x00d3, 0x00ff, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_standard_ui[] = {
	/*start U1 standard ui */
	0x0001, 0x0040, /* */
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000,	/*DNR bypass 0x1010 */
	0x002f, 0x0fff,	/*DNR bypass 0x0400 */
	0x003A, 0x000d,	/*HDTR DE_off CS : de on = d ,  de off = 9 */
	0x003B, 0x0001,	/*DE SHARPNESS(0~1023)  off */
	0x003C, 0x0000,	/*NOISE LEVEL */
	0x003F, 0x001e,	/*CS GAIN 30 */
	0x0042, 0x0030,	/*DE TH (MAX DIFF) */
	0x00c8, 0x0000,	/*kb R	SCR */
	0x00c9, 0x0000,	/*gc R */
	0x00ca, 0xffff,	/*rm R */
	0x00cb, 0xffff,	/*yw R */
	0x00cc, 0x0000,	/*kb G */
	0x00cd, 0xffff,	/*gc G */
	0x00ce, 0x0000,	/*rm G */
	0x00cf, 0xffff,	/*yw G */
	0x00d0, 0x00ff,	/*kb B */
	0x00d1, 0x00ff,	/*gc B */
	0x00d2, 0x00ff,	/*rm B */
	0x00d3, 0x00ff,	/*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_standard_video[] = {
	/*start U1 standard video */
	0x0001, 0x0041, /*PCC 40 */
	0x002c, 0x003C, /*DNR bypass 0x003C */
	0x002d, 0x1908, /*DNR bypass 0x0a08 */
	0x002e, 0x1005, /*DNR bypass 0x1010 */
	0x002f, 0x0400, /*DNR bypass 0x0400 */
	0x003A, 0x000D, /*HDTR DE CS  de on = d ,  de off = 9 */
	0x003B, 0x03ff, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0032, /*CS GAIN  */
	0x0042, 0x0020, /*DE TH (MAX DIFF) */
	0x0049, 0x0400, /*pcc skin */
	0x004a, 0x7a00, /*7300 */
	0x004b, 0x008F, /*008f */
	0x004d, 0x0100, /*pcc strength */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0x0000, /*gc R */
	0x00ca, 0xffff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x0000, /*rm G */
	0x00cf, 0xffff, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x00ff, /*gc B */
	0x00d2, 0x00ff, /*rm B */
	0x00d3, 0x00ff, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_standard_vt[] = {
	/*start U1 standard vt */
	0x0001, 0x0040, /*SCR HDTR */
	0x002c, 0x0fff, /*DNR dirTh */
	0x002d, 0x19ff, /*DNR dirnumTh decon7Th */
	0x002e, 0xff16, /*DNR decon5Th maskTh */
	0x002f, 0x0000, /*DNR blTh */
	0x003a, 0x000d, /*HDTR DE CS */
	0x003b, 0x03f8, /*DE SHARPNESS */
	0x003c, 0x0000, /*NOISE LEVEL */
	0x003f, 0x00a0, /*CS GAIN */
	0x0042, 0x0000, /*DE TH (MAX DIFF) */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0x0000, /*gc R */
	0x00ca, 0xffff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x0000, /*rm G */
	0x00cf, 0xffff, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x00ff, /*gc B */
	0x00d2, 0x00ff, /*rm B */
	0x00d3, 0x00ff, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_natural_gallery[] = {
	/*start U1 natural gallery */
	0x0001, 0x0041, /*SCR + PCC */
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000, /*DNR bypass 0x1010 */
	0x002f, 0x0fff, /*DNR bypass 0x0400 */
	0x003A, 0x000D, /*HDTR DE CS */
	0x003B, 0x03ff, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0180, /*CS GAIN  */
	0x0042, 0x0020, /*DE TH (MAX DIFF) */
	0x0049, 0x0400, /*pcc skin */
	0x004a, 0x7a00,
	0x004b, 0x008f,
	0x004d, 0x0100, /*pcc strength */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0xb6bc, /*gc R */
	0x00ca, 0xd4ff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x2148, /*rm G */
	0x00cf, 0xe8f1, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x53ee, /*gc B */
	0x00d2, 0x28f6, /*rm B */
	0x00d3, 0x56ec, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_natural_ui[] = {
	/*start U1 natural ui */
	0x0001, 0x0040, /*SCR HDTR */
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000, /*DNR bypass 0x1010 */
	0x002f, 0x0fff, /*DNR bypass 0x0400 */
	0x003A, 0x000d, /*HDTR DE_off CS : de on = d ,  de off = 9 */
	0x003B, 0x0001, /*DE SHARPNESS(0~1023)  off */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0180, /*CS GAIN 30 */
	0x0042, 0x0030, /*DE TH (MAX DIFF) */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0xb6bc, /*gc R */
	0x00ca, 0xd4ff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x2148, /*rm G */
	0x00cf, 0xe8f1, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x53ee, /*gc B */
	0x00d2, 0x28f6, /*rm B */
	0x00d3, 0x56ec, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_natural_video[] = {
	/*start U1 natural video */
	0x0001, 0x0041, /*PCC 40 */
	0x002c, 0x003C, /*DNR bypass 0x003C */
	0x002d, 0x1908, /*DNR bypass 0x0a08 */
	0x002e, 0x1005, /*DNR bypass 0x1010 */
	0x002f, 0x0400, /*DNR bypass 0x0400 */
	0x003A, 0x000D, /*HDTR DE CS  de on = d ,  de off = 9 */
	0x003B, 0x03ff, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0180, /*CS GAIN  */
	0x0042, 0x0020, /*DE TH (MAX DIFF) */
	0x0049, 0x0400, /*pcc skin */
	0x004a, 0x7a00, /*7300 */
	0x004b, 0x008F, /*008f */
	0x004d, 0x0100, /*pcc strength */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0xb6bc, /*gc R */
	0x00ca, 0xd4ff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x2148, /*rm G */
	0x00cf, 0xe8f1, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x53ee, /*gc B */
	0x00d2, 0x28f6, /*rm B */
	0x00d3, 0x56ec, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_natural_vt[] = {
	/*start U1 natural vt */
	0x0001, 0x0040, /*SCR HDTR */
	0x002c, 0x0fff, /*DNR dirTh */
	0x002d, 0x19ff, /*DNR dirnumTh decon7Th */
	0x002e, 0xff16, /*DNR decon5Th maskTh */
	0x002f, 0x0000, /*DNR blTh */
	0x003a, 0x000d, /*HDTR DE CS */
	0x003b, 0x03f8, /*DE SHARPNESS */
	0x003c, 0x0000, /*NOISE LEVEL */
	0x003f, 0x0180, /*CS GAIN */
	0x0042, 0x0000, /*DE TH (MAX DIFF) */
	0x00c8, 0x0000, /*kb R	SCR */
	0x00c9, 0xb6bc, /*gc R */
	0x00ca, 0xd4ff, /*rm R */
	0x00cb, 0xffff, /*yw R */
	0x00cc, 0x0000, /*kb G */
	0x00cd, 0xffff, /*gc G */
	0x00ce, 0x2148, /*rm G */
	0x00cf, 0xe8f1, /*yw G */
	0x00d0, 0x00ff, /*kb B */
	0x00d1, 0x53ee, /*gc B */
	0x00d2, 0x28f6, /*rm B */
	0x00d3, 0x56ec, /*yw B */
	0x00D6, 0x2000, /*GAMMA start */
	0x00D7, 0x2000,
	0x00D8, 0x2000,
	0x00D9, 0x2000,
	0x00DA, 0x2000,
	0x00DB, 0x2000,
	0x00DC, 0x2000,
	0x00DD, 0x2000,
	0x00DE, 0x2000,
	0x00DF, 0x2000,
	0x00E0, 0x2000,
	0x00E1, 0x2000,
	0x00E2, 0x2000,
	0x00E3, 0x2000,
	0x00E4, 0x2000,
	0x00E5, 0x2000,
	0x00E6, 0x2000,
	0x00E7, 0x2000,
	0x00E8, 0x2000,
	0x00E9, 0x2000,
	0x00EA, 0xa105,
	0x00EB, 0xa105,
	0x00EC, 0xa105,
	0x00ED, 0xFF00,
	0x00D5, 0x0001, /*GAMMA end */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_camera[] = {
	/*start */
	0x0001, 0x0000, /* */
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000, /*DNR bypass 0x1010 */
	0x002f, 0x0fff, /*DNR bypass 0x0400 */
	0x003A, 0x0009, /*HDTR (DE off)(CS only 9) */
	0x003B, 0x0000, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0000, /*CS GAIN */
	0x0042, 0x003f, /*DE TH (MAX DIFF) */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_camera_outdoor[] = {
	/*start */
	0x0001, 0x0002, /*OVE */
	0x002c, 0x0fff, /*DNR bypass 0x003C */
	0x002d, 0x1900, /*DNR bypass 0x0a08 */
	0x002e, 0x0000, /*DNR bypass 0x1010 */
	0x002f, 0x0fff, /*DNR bypass 0x0400 */
	0x003A, 0x000D, /*HDTR DE CS */
	0x003B, 0x03ff, /*DE SHARPNESS */
	0x003C, 0x0000, /*NOISE LEVEL */
	0x003F, 0x0100, /*CS GAIN */
	0x0042, 0x003f, /*DE TH (MAX DIFF) */
	0x0049, 0x0400, /*pcc skin */
	0x004a, 0x7300,
	0x004b, 0x008f,
	0x0054, 0x5a50, /*ove */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_cold[] = {
	/*start U1 cold */
	0x0001, 0x0044, /*SCR MCM HDTR */
	0x005b, 0x0064, /*MCM */
	0x0063, 0x9000, /*cb */
	0x0065, 0x0070, /*cr */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_cold_outdoor[] = {
	/*start U1 cold outdoor */
	0x0001, 0x0046, /*SCR MCM HDTR OVE */
	0x0054, 0x5a50, /*OVE */
	0x005b, 0x0064, /*MCM */
	0x0063, 0x9000, /*cb */
	0x0065, 0x0070, /*cr */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_normal_outdoor[] = {
	/*start U1 outdoor */
	0x0001, 0x0042, /*OVE */
	0x0054, 0x5a50, /*ove */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_warm[] = {
	/*start U1 warm */
	0x0001, 0x0044, /*SCR MCM HDTR */
	0x005b, 0x0064, /*MCM */
	0x0063, 0x7000, /*cb */
	0x0065, 0x0090, /*cr */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_warm_outdoor[] = {
	/*start U1 warm outdoor */
	0x0001, 0x0046, /*SCR MCM PCC OVE */
	0x0054, 0x5a50, /*OVE */
	0x005b, 0x0064, /*MCM */
	0x0063, 0x7000, /*cb */
	0x0065, 0x0090, /*cr */
	0x0028, 0x0000, /*Register Mask */
	/*end */
	END_SEQ, 0x0000,
};

struct mdnie_tunning_info etc_table[CABC_MAX][OUTDOOR_MAX][TONE_MAX] = {
	{
		{
			{"NORMAL",		NULL},
			{"WARM",		tune_warm},
			{"COLD",		tune_cold},
		},
		{
			{"NORMAL_OUTDOOR",	tune_normal_outdoor},
			{"WARM_OUTDOOR",	tune_warm_outdoor},
			{"COLD_OUTDOOR",	tune_cold_outdoor},
		},
	}
};

struct mdnie_tunning_info tunning_table[CABC_MAX][MODE_MAX][SCENARIO_MAX] = {
	{
		{
			{"CYANOGENMOD",		tune_cyanogenmod},
			{"DYNAMIC_UI",		tune_dynamic_ui},
			{"DYNAMIC_VIDEO",	tune_dynamic_video},
			{"DYNAMIC_VIDEO",	tune_dynamic_video},
			{"DYNAMIC_VIDEO",	tune_dynamic_video},
			{"CAMERA",		NULL},
			{"DYNAMIC_UI",		tune_dynamic_ui},
			{"DYNAMIC_GALLERY",	tune_dynamic_gallery},
			{"DYNAMIC_VT",		tune_dynamic_vt},
		}, {
			{"CYANOGENMOD",		tune_cyanogenmod},
			{"STANDARD_UI",		tune_standard_ui},
			{"STANDARD_VIDEO",	tune_standard_video},
			{"STANDARD_VIDEO",	tune_standard_video},
			{"STANDARD_VIDEO",	tune_standard_video},
			{"CAMERA",		NULL},
			{"STANDARD_UI",		tune_standard_ui},
			{"STANDARD_GALLERY",	tune_standard_gallery},
			{"STANDARD_VT",		tune_standard_vt},
		}, {
			{"CYANOGENMOD",		tune_cyanogenmod},
			{"NATURAL_UI",		tune_natural_ui},
			{"NATURAL_VIDEO",	tune_natural_video},
			{"NATURAL_VIDEO",	tune_natural_video},
			{"NATURAL_VIDEO",	tune_natural_video},
			{"CAMERA",		NULL},
			{"NATURAL_UI",		tune_natural_ui},
			{"NATURAL_GALLERY",	tune_natural_gallery},
			{"NATURAL_VT",		tune_natural_vt},
		}, {
			{"CYANOGENMOD",		tune_cyanogenmod},
			{"MOVIE_UI",		tune_movie_ui},
			{"MOVIE_VIDEO",		tune_movie_video},
			{"MOVIE_VIDEO",		tune_movie_video},
			{"MOVIE_VIDEO",		tune_movie_video},
			{"CAMERA",		NULL},
			{"MOVIE_UI",		tune_movie_ui},
			{"MOVIE_GALLERY",	tune_movie_gallery},
			{"MOVIE_VT",		tune_movie_vt},
		},
	}
};

struct mdnie_tunning_info camera_table[OUTDOOR_MAX] = {
	{"CAMERA",		tune_camera},
	{"CAMERA_OUTDOOR",	tune_camera_outdoor},
};

#endif /* __MDNIE_TABLE_H__ */
